[{"name":"KeyValueStore","comment":" Generate an Elm module for saving and loading data to an external key-value data source.\n\nFor guidance on how to wire the generated code to work with JavaScript through ports, take a look at the\nexamples in the package Github repo.\n\n\n# Configuration\n\n@docs init\n\n\n# Generating a Store\n\n@docs generate\n\n","unions":[],"aliases":[],"values":[{"name":"generate","comment":" Generates an Elm file from a passed `Store` (which you can create with the [`init`](#init)\nfunction) and some JSON (as a `Json.Decode.Value`).\n\nIf the passed Json cannot be decoded, the generated code will be for managing arbitrary key\nvalue pairs with the store. No decoding or encoding will be generated. While this may still\nbe useful, it's less useful than getting all your serialization for free!\n\nThe generated code has its behavior documented. If you'd like to understand how your store is\nworking internally, generate some code and read the comments!\n\n","type":"KeyValueStore.Store -> Json.Decode.Value -> Elm.File"},{"name":"init","comment":" Create a new store. You can pass this to the [`generate`](#generate) function to generate\ncode with elm-codegen.\n","type":"List.List String.String -> KeyValueStore.Store"}],"binops":[]}]